{"remainingRequest":"/workspace/hw4-msa-capstone-project/frontend/node_modules/babel-loader/lib/index.js!/workspace/hw4-msa-capstone-project/frontend/node_modules/vuetify/lib/mixins/intersectable/index.js","dependencies":[{"path":"/workspace/hw4-msa-capstone-project/frontend/node_modules/vuetify/lib/mixins/intersectable/index.js","mtime":1658794624859},{"path":"/workspace/hw4-msa-capstone-project/frontend/babel.config.js","mtime":1658724955000},{"path":"/workspace/hw4-msa-capstone-project/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1658794618851},{"path":"/workspace/hw4-msa-capstone-project/frontend/node_modules/babel-loader/lib/index.js","mtime":1658794619371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gRGlyZWN0aXZlcwppbXBvcnQgSW50ZXJzZWN0IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaW50ZXJzZWN0JzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBjb25zb2xlV2FybiB9IGZyb20gJy4uLy4uL3V0aWwvY29uc29sZSc7IC8vIFR5cGVzCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGludGVyc2VjdGFibGUob3B0aW9ucykgewogIHJldHVybiBWdWUuZXh0ZW5kKHsKICAgIG5hbWU6ICdpbnRlcnNlY3RhYmxlJywKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgIGlzSW50ZXJzZWN0aW5nOiBmYWxzZQogICAgfSksCgogICAgbW91bnRlZCgpIHsKICAgICAgSW50ZXJzZWN0Lmluc2VydGVkKHRoaXMuJGVsLCB7CiAgICAgICAgbmFtZTogJ2ludGVyc2VjdCcsCiAgICAgICAgdmFsdWU6IHRoaXMub25PYnNlcnZlCiAgICAgIH0sIHRoaXMuJHZub2RlKTsKICAgIH0sCgogICAgZGVzdHJveWVkKCkgewogICAgICBJbnRlcnNlY3QudW5iaW5kKHRoaXMuJGVsLCB7CiAgICAgICAgbmFtZTogJ2ludGVyc2VjdCcsCiAgICAgICAgdmFsdWU6IHRoaXMub25PYnNlcnZlCiAgICAgIH0sIHRoaXMuJHZub2RlKTsKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICBvbk9ic2VydmUoZW50cmllcywgb2JzZXJ2ZXIsIGlzSW50ZXJzZWN0aW5nKSB7CiAgICAgICAgdGhpcy5pc0ludGVyc2VjdGluZyA9IGlzSW50ZXJzZWN0aW5nOwogICAgICAgIGlmICghaXNJbnRlcnNlY3RpbmcpIHJldHVybjsKCiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbmd0aCA9IG9wdGlvbnMub25WaXNpYmxlLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IHRoaXNbb3B0aW9ucy5vblZpc2libGVbaV1dOwoKICAgICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CgogICAgICAgICAgY29uc29sZVdhcm4ob3B0aW9ucy5vblZpc2libGVbaV0gKyAnIG1ldGhvZCBpcyBub3QgYXZhaWxhYmxlIG9uIHRoZSBpbnN0YW5jZSBidXQgcmVmZXJlbmNlZCBpbiBpbnRlcnNlY3RhYmxlIG1peGluIG9wdGlvbnMnKTsKICAgICAgICB9CiAgICAgIH0KCiAgICB9CiAgfSk7Cn0="},{"version":3,"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,eAAc,SAAUC,aAAV,CAAyBC,OAAzB,EAAyD;EACrE,OAAOF,GAAG,CAACG,MAAJ,CAAW;IAChBC,IAAI,EAAE,eADU;IAGhBC,IAAI,EAAE,OAAO;MACXC,cAAc,EAAE;IADL,CAAP,CAHU;;IAOhBC,OAAO;MACLT,SAAS,CAACU,QAAV,CAAmB,KAAKC,GAAxB,EAA4C;QAC1CL,IAAI,EAAE,WADoC;QAE1CM,KAAK,EAAE,KAAKC;MAF8B,CAA5C,EAGG,KAAKC,MAHR;IARc;;IAchBC,SAAS;MACPf,SAAS,CAACgB,MAAV,CAAiB,KAAKL,GAAtB,EAA0C;QACxCL,IAAI,EAAE,WADkC;QAExCM,KAAK,EAAE,KAAKC;MAF4B,CAA1C,EAGG,KAAKC,MAHR;IAfc;;IAqBhBG,OAAO,EAAE;MACPJ,SAAS,CAAEK,OAAF,EAAwCC,QAAxC,EAAwEX,cAAxE,EAA+F;QACtG,KAAKA,cAAL,GAAsBA,cAAtB;QAEA,IAAI,CAACA,cAAL,EAAqB;;QAErB,KAAK,IAAIY,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGjB,OAAO,CAACkB,SAAR,CAAkBD,MAA3C,EAAmDD,CAAC,GAAGC,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;UAClE,MAAMG,QAAQ,GAAI,KAAanB,OAAO,CAACkB,SAAR,CAAkBF,CAAlB,CAAb,CAAlB;;UAEA,IAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;YAClCA,QAAQ;YACR;UACD;;UAEDtB,WAAW,CAACG,OAAO,CAACkB,SAAR,CAAkBF,CAAlB,IAAuB,wFAAxB,CAAX;QACD;MACF;;IAhBM;EArBO,CAAX,CAAP;AAwCD","names":["Intersect","consoleWarn","Vue","intersectable","options","extend","name","data","isIntersecting","mounted","inserted","$el","value","onObserve","$vnode","destroyed","unbind","methods","entries","observer","i","length","onVisible","callback"],"sourceRoot":"","sources":["../../../src/mixins/intersectable/index.ts"],"sourcesContent":["// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n"]}]}