{"remainingRequest":"/workspace/hw4-msa-capstone-project/frontend2/node_modules/babel-loader/lib/index.js!/workspace/hw4-msa-capstone-project/frontend2/node_modules/vuetify/lib/mixins/delayable/index.js","dependencies":[{"path":"/workspace/hw4-msa-capstone-project/frontend2/node_modules/vuetify/lib/mixins/delayable/index.js","mtime":1658796349000},{"path":"/workspace/hw4-msa-capstone-project/frontend2/babel.config.js","mtime":1658796137000},{"path":"/workspace/hw4-msa-capstone-project/frontend2/node_modules/cache-loader/dist/cjs.js","mtime":1658796346000},{"path":"/workspace/hw4-msa-capstone-project/frontend2/node_modules/babel-loader/lib/index.js","mtime":1658796347000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwovKioKICogRGVsYXlhYmxlCiAqCiAqIEBtaXhpbgogKgogKiBDaGFuZ2VzIHRoZSBvcGVuIG9yIGNsb3NlIGRlbGF5IHRpbWUgZm9yIGVsZW1lbnRzCiAqLwoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCgpLmV4dGVuZCh7CiAgbmFtZTogJ2RlbGF5YWJsZScsCiAgcHJvcHM6IHsKICAgIG9wZW5EZWxheTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgY2xvc2VEZWxheTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgb3BlblRpbWVvdXQ6IHVuZGVmaW5lZCwKICAgIGNsb3NlVGltZW91dDogdW5kZWZpbmVkCiAgfSksCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBDbGVhciBhbnkgcGVuZGluZyBkZWxheSB0aW1lcnMgZnJvbSBleGVjdXRpbmcKICAgICAqLwogICAgY2xlYXJEZWxheSgpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRoaXMub3BlblRpbWVvdXQpOwogICAgICBjbGVhclRpbWVvdXQodGhpcy5jbG9zZVRpbWVvdXQpOwogICAgfSwKCiAgICAvKioKICAgICAqIFJ1bnMgY2FsbGJhY2sgYWZ0ZXIgYSBzcGVjaWZpZWQgZGVsYXkKICAgICAqLwogICAgcnVuRGVsYXkodHlwZSwgY2IpIHsKICAgICAgdGhpcy5jbGVhckRlbGF5KCk7CiAgICAgIGNvbnN0IGRlbGF5ID0gcGFyc2VJbnQodGhpc1tgJHt0eXBlfURlbGF5YF0sIDEwKTsKICAgICAgdGhpc1tgJHt0eXBlfVRpbWVvdXRgXSA9IHNldFRpbWVvdXQoY2IgfHwgKCgpID0+IHsKICAgICAgICB0aGlzLmlzQWN0aXZlID0gewogICAgICAgICAgb3BlbjogdHJ1ZSwKICAgICAgICAgIGNsb3NlOiBmYWxzZQogICAgICAgIH1bdHlwZV07CiAgICAgIH0pLCBkZWxheSk7CiAgICB9CgogIH0KfSk7"},{"version":3,"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA;;;;;;AAMG;;AACH,eAAeA,GAAG,CAACC,MAAJ,GAA2CA,MAA3C,CAAkD;EAC/DC,IAAI,EAAE,WADyD;EAG/DC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADG;MAETC,OAAO,EAAE;IAFA,CADN;IAKLC,UAAU,EAAE;MACVJ,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADI;MAEVC,OAAO,EAAE;IAFC;EALP,CAHwD;EAc/DE,IAAI,EAAE,OAAO;IACXC,WAAW,EAAEC,SADF;IAEXC,YAAY,EAAED;EAFH,CAAP,CAdyD;EAmB/DE,OAAO,EAAE;IACP;;AAEG;IACHC,UAAU;MACRC,YAAY,CAAC,KAAKL,WAAN,CAAZ;MACAK,YAAY,CAAC,KAAKH,YAAN,CAAZ;IANK;;IAQP;;AAEG;IACHI,QAAQ,CAAEZ,IAAF,EAA0Ba,EAA1B,EAAyC;MAC/C,KAAKH,UAAL;MAEA,MAAMI,KAAK,GAAGC,QAAQ,CAAE,KAAa,GAAGf,IAAI,OAApB,CAAF,EAAgC,EAAhC,CAAtB;MAEE,KAAa,GAAGA,IAAI,SAApB,IAAiCgB,UAAU,CAACH,EAAE,KAAK,MAAK;QACxD,KAAKI,QAAL,GAAgB;UAAEC,IAAI,EAAE,IAAR;UAAcC,KAAK,EAAE;QAArB,EAA6BnB,IAA7B,CAAhB;MAD8C,EAAH,EAEzCc,KAFyC,CAA3C;IAGH;;EAnBM;AAnBsD,CAAlD,CAAf","names":["Vue","extend","name","props","openDelay","type","Number","String","default","closeDelay","data","openTimeout","undefined","closeTimeout","methods","clearDelay","clearTimeout","runDelay","cb","delay","parseInt","setTimeout","isActive","open","close"],"sourceRoot":"","sources":["../../../src/mixins/delayable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n"]}]}